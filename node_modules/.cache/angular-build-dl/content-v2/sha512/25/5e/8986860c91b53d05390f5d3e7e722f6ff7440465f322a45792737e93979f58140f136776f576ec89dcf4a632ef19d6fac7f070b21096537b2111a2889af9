{"version":3,"sources":["./src/app/sign-up/sign-up.module.ts","./src/app/sign-up/sign-up.page.html","./src/app/sign-up/sign-up.page.scss","./src/app/validators/password.validator.ts","./src/app/sign-up/sign-up.page.ts","./src/app/validators/username.validator.ts"],"names":[],"mappings":"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","file":"sign-up-sign-up-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { SignUpPageRoutingModule } from './sign-up-routing.module';\nimport { SignUpPage } from './sign-up.page';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SignUpPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes)\n    //SignUpPageRoutingModule\n  ],\n  declarations: [SignUpPage]\n})\nexport class SignUpPageModule {}","export default \"<ion-header>\\n  <ion-toolbar text-center>\\n    <ion-button fill=\\\"clear\\\" [routerLink]=\\\"['/account-ui']\\\">Cancel</ion-button>\\n    <ion-title>Create An Account</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <form [formGroup]=\\\"signup_form\\\" (ngSubmit)=\\\"onSubmit(signup_form.value)\\\">\\n    <!--FIRST NAME-->\\n    <ion-item>\\n      <ion-input type=\\\"text\\\" placeholder=\\\"First Name\\\" formControlName=\\\"firstName\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"valid-errors\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.firstName\\\">\\n        <div class=\\\"signup-error-msg\\\" *ngIf=\\\"signup_form.get('firstName').hasError(validation.type)&&(signup_form.get('firstName').dirty||signup_form.get('firstName').touched)\\\">\\n          <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{validation.message}}\\n        </div>\\n      </ng-container>\\n    </div>\\n    <!--LAST NAME-->\\n    <ion-item>\\n      <ion-input type=\\\"text\\\" placeholder=\\\"Last Name\\\" formControlName=\\\"lastName\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"valid-errors\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.lastName\\\">\\n        <div class=\\\"signup-error-msg\\\" *ngIf=\\\"signup_form.get('lastName').hasError(validation.type)&&(signup_form.get('lastName').dirty||signup_form.get('lastName').touched)\\\">\\n          <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{validation.message}}\\n        </div>\\n      </ng-container>\\n    </div>\\n    <!--GENDER-->\\n    <ion-item>\\n      <ion-label color=\\\"secondary\\\">Gender</ion-label>\\n      <ion-select formControlName=\\\"firstName\\\" cancelText=\\\"Cancel\\\" okText=\\\"OK\\\">\\n        <ion-select-option *ngFor=\\\"let gender of genders\\\" [value]=\\\"gender\\\">{{gender}}</ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n    <!--USERNAME-->\\n    <ion-item>\\n      <ion-input type=\\\"text\\\" placeholder=\\\"Username\\\" formControlName=\\\"handle\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"valid-errors\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.handle\\\">\\n        <div class=\\\"signup-error-msg\\\" *ngIf=\\\"signup_form.get('handle').hasError(validation.type)&&(signup_form.get('handle').dirty||signup_form.get('handle').touched)\\\">\\n          <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{validation.message}}\\n        </div>\\n      </ng-container>\\n    </div>\\n    <!--PASSWORD-->\\n    <div formGroupName=\\\"matching_passwords\\\">\\n      <ion-item>\\n        <ion-input type=\\\"password\\\" placeholder=\\\"Password\\\" formControlName=\\\"password\\\"></ion-input>\\n      </ion-item>\\n      <div class=\\\"valid-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validation_messages.password\\\">\\n          <div class=\\\"signup-error-msg\\\" *ngIf=\\\"signup_form.get('matching_passwords').get('password').hasError(validation.type)&&(signup_form.get('matching_passwords').get('password').dirty||signup_form.get('matching_passwords').get('password').touched)\\\">\\n            <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{validation.message}}\\n          </div>\\n        </ng-container>\\n      </div>\\n\\n      <ion-item>\\n        <ion-input type=\\\"password\\\" placeholder=\\\"Confirm Password\\\" formControlName=\\\"confirm_password\\\"></ion-input>\\n      </ion-item>\\n      <div class=\\\"valid-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validation_messages.confirm_password\\\">\\n          <div class=\\\"signup-error-msg\\\" *ngIf=\\\"signup_form.get('matching_passwords').get('confirm_password').hasError(validation.type)&&(signup_form.get('matching_passwords').get('confirm_password').dirty||signup_form.get('matching_passwords').get('confirm_password').touched)\\\">\\n            <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{validation.message}}\\n          </div>\\n        </ng-container>\\n      </div>\\n    </div>\\n    <!--Validations for the FormGroup-->\\n    <div class=\\\"valid-errors\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.matching_passwords\\\">\\n        <div class=\\\"signup-error-msg\\\" *ngIf=\\\"signup_form.get('matching_passwords').hasError(validation.type)&&(signup_form.get('matching_passwords').get('confirm_password').dirty||signup_form.get('matching_passwords').get('confirm_password').touched)\\\">\\n          <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{validation.message}}\\n        </div>\\n      </ng-container>\\n    </div>\\n    <!--TERMS AND CONDITIONS-->\\n    <ion-item>\\n      <ion-label color=\\\"secondary\\\">I accept terms and conditions</ion-label>\\n      <ion-checkbox formControlName=\\\"terms\\\"></ion-checkbox>\\n    </ion-item>\\n    <div class=\\\"valid-errors\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.terms\\\">\\n        <div class=\\\"signup-error-msg\\\" *ngIf=\\\"signup_form.get('terms').hasError(validation.type)&&(signup_form.get('terms').dirty||signup_form.get('terms').touched)\\\">\\n          <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{validation.message}}\\n        </div>\\n      </ng-container>\\n    </div>\\n    <!--SUBMIT BUTTON-->\\n    <ion-button color=\\\"success\\\" expand=\\\"block\\\" type=\\\"submit\\\" [disabled]=\\\"!signup_form.valid\\\">Create Account</ion-button>\\n  \\n  </form>\\n</ion-content>\";","export default \"ion-header {\\n  --ion-background-color: #1a202c;\\n}\\nion-header ion-title {\\n  color: #1f7872;\\n  display: inline-block;\\n}\\nion-content {\\n  --ion-background-color: #1a202c;\\n}\\nion-input {\\n  color: white;\\n}\\nion-item {\\n  margin-top: 5%;\\n  margin-bottom: 5%;\\n}\\n.valid-errors {\\n  color: white;\\n  font-size: small;\\n  margin-left: 5%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXHNpZ24tdXAucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksK0JBQUE7QUFDSjtBQUFJO0VBQ0ksY0FBQTtFQUNBLHFCQUFBO0FBRVI7QUFFQTtFQUNJLCtCQUFBO0FBQ0o7QUFDQTtFQUNJLFlBQUE7QUFFSjtBQUNBO0VBQ0ksY0FBQTtFQUNBLGlCQUFBO0FBRUo7QUFBQTtFQUNJLFlBQUE7RUFDQSxnQkFBQTtFQUNBLGVBQUE7QUFHSiIsImZpbGUiOiJzaWduLXVwLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1oZWFkZXIge1xyXG4gICAgLS1pb24tYmFja2dyb3VuZC1jb2xvcjogIzFhMjAyYztcclxuICAgIGlvbi10aXRsZSB7XHJcbiAgICAgICAgY29sb3I6ICMxZjc4NzI7XHJcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgfVxyXG59XHJcblxyXG5pb24tY29udGVudCB7XHJcbiAgICAtLWlvbi1iYWNrZ3JvdW5kLWNvbG9yOiAjMWEyMDJjO1xyXG59XHJcbmlvbi1pbnB1dCB7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcbmlvbi1pdGVtIHtcclxuICAgIG1hcmdpbi10b3A6IDUlO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNSU7XHJcbn1cclxuLnZhbGlkLWVycm9ycyB7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICBmb250LXNpemU6IHNtYWxsO1xyXG4gICAgbWFyZ2luLWxlZnQ6IDUlO1xyXG59Il19 */\";","import { FormControl, FormGroup } from '@angular/forms';\r\n\r\nexport class PasswordValidator {\r\n    static areEqual(formGroup: FormGroup) {\r\n        let val;\r\n        let valid = true;\r\n\r\n        for (let key in formGroup.controls) {\r\n            if (formGroup.controls.hasOwnProperty(key)) {\r\n                let control: FormControl = <FormControl>formGroup.controls[key];\r\n                if (val===undefined) {\r\n                    val=control.value\r\n                } else {\r\n                    if (val !== control.value) {\r\n                        valid = false;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (valid) {\r\n            return null;\r\n        }\r\n        return {\r\n            areEqual: true\r\n        };\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { PasswordValidator } from '../validators/password.validator';\nimport { UsernameValidator } from '../validators/username.validator';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.page.html',\n  styleUrls: ['./sign-up.page.scss'],\n})\n\nexport class SignUpPage implements OnInit {\n  signup_form: FormGroup;\n  matching_passwords_group: FormGroup;\n\n  genders: Array<string>;\n\n  constructor(\n    public formBuilder: FormBuilder,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    this.genders = [\n      \"Male\",\n      \"Female\"\n    ];\n    \n    this.matching_passwords_group = new FormGroup({\n      password: new FormControl('', Validators.compose([\n        Validators.minLength(6),\n        Validators.required,\n        Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])[a-zA-Z0-9_-]+$') //required: one uppercase, one lowercase, one number, can include underscore/hyphen\n      ])),\n      confirm_password: new FormControl('', Validators.required)\n    }, (formGroup: FormGroup) => {\n      return PasswordValidator.areEqual(formGroup);\n    });\n\n    this.signup_form = this.formBuilder.group({\n      handle: new FormControl('', Validators.compose([\n        UsernameValidator.validUsername,\n        Validators.maxLength(20),\n        Validators.minLength(5),\n        Validators.pattern('^(?=.*[a-zA-Z])(?=.*[0-9])[a-zA-Z0-9]+$'),\n        Validators.required\n      ])),\n      firstName: new FormControl('', Validators.required),\n      lastName: new FormControl('', Validators.required),\n      email: new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$') //must be <text>@<text>.<text>\n      ])),\n      gender: new FormControl(this.genders[0], Validators.required),\n      matching_passwords: this.matching_passwords_group,\n      terms: new FormControl(true, Validators.pattern('true'))\n    });\n  }\n\n  validation_messages = {\n    'handle': [\n      {type: 'required', message: 'Required'},\n      {type: 'minLength', message: 'Must be at least 5 characters long'},\n      {type: 'maxLength', message: 'Cannot be more than 25 characters long'},\n      {type: 'pattern', message: 'Must only contain letters and numbers'},\n      {type: 'validUsername', message: 'Username already taken'}\n    ],\n    'firstName': [\n      {type: 'required', message: 'Required'}\n    ],\n    'lastName': [\n      {type: 'required', message: 'Required'}\n    ],\n    'email': [\n      {type: 'required', message: 'Required'},\n      {type: 'pattern', message: 'Please enter a valid email'}\n    ],\n    'password': [\n      {type: 'required', message: 'Required'},\n      {type: 'minlength', message: 'Must be at least 6 characters long'},\n      {type: 'pattern', message: 'Must contains at least one uppercase letter, one lowercase letter, and one number'}\n    ],\n    'confirm_password': [\n      {type: 'required', message: 'Re-type password'}\n    ],\n    'matching_passwords': [\n      {type: 'areEqual', message: 'Passwords must match'}\n    ],\n    'terms': [\n      {type: 'pattern', message: 'You must accept the terms and conditions'}\n    ],\n  };\n\n  onSubmit(values) {\n    console.log(values);\n    this.router.navigate([\"/tab1\"]); //temporarily routes to home page\n  }\n\n}","import { FormControl } from '@angular/forms';\r\n\r\nexport class UsernameValidator {\r\n    static validUsername(fc: FormControl) {\r\n        if (fc.value.toLowerCase()===\"abc123\" || fc.value.toLowerCase()===\"123abc\") {\r\n            return {\r\n                validUsername: true\r\n            };\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n//Change these values to check usernames with API"],"sourceRoot":"webpack:///"}